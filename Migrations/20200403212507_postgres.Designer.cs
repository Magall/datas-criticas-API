// <auto-generated />
using System;
using DatasCriticasApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DatasCriticasApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200403212507_postgres")]
    partial class postgres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20120.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DatasCriticasApi.Models.DataCritica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("nome");

                    b.ToTable("DatasCriticas");
                });

            modelBuilder.Entity("DatasCriticasApi.Models.Departamento", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Nome");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("DatasCriticasApi.Models.DataCritica", b =>
                {
                    b.HasOne("DatasCriticasApi.Models.Departamento", "departamento")
                        .WithMany()
                        .HasForeignKey("nome");
                });
#pragma warning restore 612, 618
        }
    }
}
